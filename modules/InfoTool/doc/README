
Toolbar for myMVC
==================

Activating Toolbar

	TLDR
		1.	create a view in target controller (well, that is standard; in most cases you will do so)
		2.	place an event handler with closure function Infotool which gets the view object of target controller

	more detailed
		1.
		you need to instantiate a View Object in your Target Controller Class(A).
		Let's say it is Standard\View\Index():

			public function __construct ()
			{
				...
				$this->_oStandardViewIndex = new \Standard\View\Index();
				...
			}

		2.
		you need to add the following event listener to your Event Class __constructor()(B).
		The param `$oObject` here contains the Target Controller Object(A).
		In the lambda, switch on ToolBar and tell the Infotool what View to use: $oObject->_oStandardViewIndex

			/*
			 * switch on the debug toolbar immediatly after the target class/method was called
			 */
			\MVC\Event::BIND ('mvc.reflect.targetObject.after', function ($oObject)
			{
				// switch on ToolBar
				new \InfoTool\Model\Index ($oObject->_oStandardViewIndex);
			});


Requirements
	-	Bootstrap CSS
	-	Bootstrap JS
	-	Font Awesome CSS
	-	jQuery JS

	InfoTool tries to load jquery.js + bootstrap.js automatically if not loaded yet.

	If your own specific Templates are not loading 
	-	Bootstrap CSS
	-	Font Awesome CSS
	libraries yet, you may want to include them either in your own templates
	or 
	inside /modules/InfoTool/templates/infoTool.tpl 

	CSS
		Bootstrap	
			<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
			<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css">

		Font Awesome
			<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.1.0/css/font-awesome.min.css">

	JS
		jQuery
			<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.1/jquery.min.js" type="text/javascript"></script>
		Bootstrap	
			<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js" type="text/javascript"></script>