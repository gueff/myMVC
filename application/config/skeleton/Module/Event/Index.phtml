<?php
/**
 * Index.php
 *
 * @package myMVC
 * @copyright ueffing.net
 * @author Guido K.B.W. Ãœffing <info@ueffing.net>
 * @license GNU GENERAL PUBLIC LICENSE Version 3. See application/doc/COPYING
 */

/**
 * @name ${module}Event
 */
namespace {module}\Event;

use MVC\Config;
use MVC\DataType\DTArrayObject;
use MVC\Event;
use MVC\Registry;
use MVC\Route;

/**
 * Index
 */
class Index
{
    /**
     * activates Session
     * gets active by triggered event "mvc.application.setSession.before"
     * @see /modules/{module}/etc/event/
     * @param DTArrayObject $oDTArrayObject
     * @throws \ReflectionException
     */
    public static function enableSession(\MVC\DataType\DTArrayObject $oDTArrayObject)
    {
        $aEnableSessionForController = get(Config::MODULE()['SESSION']['aEnableSessionForController'], array());
        $aDisableSessionForController = get(Config::MODULE()['SESSION']['aDisableSessionForController'], array());

        $bEnable = (
            // current controller
            in_array(Route::getCurrent()->get_c(), $aEnableSessionForController)
            ||
            // any
            in_array('*', $aEnableSessionForController)
        );

        $bDisable = (
            // current controller
            in_array(Route::getCurrent()->get_c(), $aDisableSessionForController)
            ||
            // any
            in_array('*', $aDisableSessionForController)
        );

        if (true == $bEnable
            && false == $bDisable
            && isset($_COOKIE['myMVC_cookieConsent'])
            && "true" == $_COOKIE['myMVC_cookieConsent']
        )
        {
            Config::set_MVC_SESSION_ENABLE();
        }
    }
}