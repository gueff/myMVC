<?php

error_reporting(E_ALL);
date_default_timezone_set('Europe/Berlin');

// enable debug output
$aConfig['MVC_DEBUG'] = true;

// show InfoTool bar
$aConfig['MVC_INFOTOOL_ENABLE'] = true;

//-------------------------------------------------------------------------------------
// Module {module}

// MVC fallback routing
$aConfig['MVC_ROUTING_FALLBACK'] = 'module={module}&c=index&m=notFound'; # query

$aConfig['MODULE_{module}'] = array();

/**
 * Where to activate Session;
 * name Controllers
 */
$aConfig['MODULE_{module}']['SESSION'] = array(

    // enable session for these controllers
    'aEnableSessionForController' => array(
        '*',        # any
        #'Index',   # concrete
    ),
    // disable session for these controllers
    'aDisableSessionForController' => array(
        #'*',       # any
        #'Index',   # concrete
    ),
);

/**
 * Event Bindings
 * @see https://mymvc.ueffing.net/events
 */
$aConfig['MODULE_{module}']['EVENT_BIND'] = array(

    'mvc.application.setSession.before' => array(
        // enable session (if necessary)
        function(\MVC\DataType\DTArrayObject $oDTArrayObject) {
            \{module}\Event\Index::enableSession($oDTArrayObject);
        }
    ),
    'mvc.reflex.reflect.targetObject.before' => array(
        // minify css + js files (if necessary)
        function(\MVC\DataType\DTArrayObject $oDTArrayObject) use ($aConfig) {
            \MVC\Minify::init();
        },
        // create/update ".myMVC.json" routing file (if necessary)
        function(\MVC\DataType\DTArrayObject $oDTArrayObject) {
            \MVC\Router::createFinalJson();
        }
    ),
    'mvc.reflex.reflect.targetObject.after' => array(
        function (\MVC\DataType\DTArrayObject $oDTArrayObject) {
            // load InfoTool
            $oView = $oDTArrayObject
                ->getDTKeyValueByKey('oReflectionObject')
                ->get_sValue()
                ->oView;
            // switch on InfoTool
            new \MVC\InfoTool($oView);
        },
    ),
    'mvc.helper.stop.after' => array(
        function (\MVC\DataType\DTArrayObject $oDTArrayObject) {
            \MVC\Log::write("\n\n*** STOP ***\n" . print_r($oDTArrayObject->get_akeyvalue()[0]->get_sValue(), true));
        }
    ),
    'mvc.error' => array(
        // write errors into error log file
        function(\MVC\DataType\DTArrayObject $oDTArrayObject) {
            \MVC\Log::write($oDTArrayObject, 'error.log');
        }
    ),
);


//-------------------------------------------------------------------------------------
// Module {module} CSP
// For further Rules Explanation @see https://content-security-policy.com/

$aConfig['MODULE_{module}']['CSP'] = array();
$aConfig['MODULE_{module}']['CSP']['aMapping']   = array(
    // header key                   CSP config key
    'Content-Security-Policy'   => 'Content-Security-Policy',   // Default
    'X-Content-Security-Policy' => 'Content-Security-Policy',   // IE
    'X-Webkit-CSP'              => 'Content-Security-Policy',   // Chrome, Safari
    'X-Frame-Options'           => 'X-Frame-Options',
    'X-XSS-Protection'          => 'X-XSS-Protection',
    'Strict-Transport-Security' => 'Strict-Transport-Security',
);

/**
 * Websites (URLs) which are allowed to embed our Site into e.g. a <frame>
 */
$aConfig['MODULE_{module}']['CSP']['X-Frame-Options'] = " allow-from 'none'";

/**
 * Content-Security-Policy
 */
$aConfig['MODULE_{module}']['CSP']['Content-Security-Policy'] = ""

    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/default-src
     */
    .   "default-src  'self'; "

    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src
     */
    .   "script-src   'self' " .
        "'unsafe-inline' " .
        "; "

    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src
     */
    .   "style-src    'self' " .
        "'unsafe-inline' " .
        "; "

    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/img-src
     */
    .   "img-src      'self' " .
        "blob: " .
        "data: " .
        "; "

    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/connect-src
     */
    .   "connect-src  'self'; "

    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/font-src
     */
    .   "font-src     'self' " .
        "; "

    /**
     * To disallow all plugins, the object-src directive should be set to 'none' which will disallow plugins.
     * The plugin-types directive is only used if you are allowing plugins with object-src at all.
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/plugin-types
     */
    .   "object-src   'none'; "

    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/media-src
     */
    .   "media-src    'self'; "

    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/child-src
     */
    .   "child-src    'self';"

    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/sandbox
     */
    .   "sandbox      " .
        "allow-forms " .
        "allow-same-origin " .
        "allow-scripts " .
        "allow-popups " .
        "allow-modals " .
        "allow-orientation-lock " .
        "allow-pointer-lock " .
        "allow-presentation " .
        "allow-popups-to-escape-sandbox " .
        "allow-top-navigation; "

    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/report-uri
     */
    .   "report-uri   /; "

    /**
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/form-action
     */
    .   "form-action  'self'; "

    /**
     * The HTTP Content-Security-Policy (CSP) frame-ancestors directive specifies valid parents
     * that may embed a page using <frame>, <iframe>, <object>, <embed>, or <applet>.
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors
     */
    .   "frame-ancestors " . $aConfig['MODULE_{module}']['CSP']['X-Frame-Options'] . "; "

    /**
     * frames
     * that may embed a page using <frame>, <iframe>, <object>, <embed>, or <applet>.
     */
    .   "frame-src 'self'; "

    //end
    ;

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
 */
$aConfig['MODULE_{module}']['CSP']['X-XSS-Protection'] = '1; mode=block';

/**
 * 63072000 for 24 months
 * @see https://support.servertastic.com/knowledgebase/article/http-strict-transport-security-php
 */
$aConfig['MODULE_{module}']['CSP']['Strict-Transport-Security'] = 'max-age=63072000'; # 63072000 for 24 months
